name: Sync Dotfiles

on:
  # Run daily at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
  
  # Run when dotfiles repo updates (requires webhook)
  repository_dispatch:
    types: [dotfiles-updated]

jobs:
  sync-dotfiles:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout justin-os
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Checkout dotfiles repo
        uses: actions/checkout@v4
        with:
          repository: zoro11031/dotfiles
          path: dotfiles-sync
          # Use DOTFILES_PAT if configured for private repos, otherwise use GITHUB_TOKEN
          # This securely handles authentication without exposing tokens in logs
          token: ${{ secrets.DOTFILES_PAT || secrets.GITHUB_TOKEN }}
          
      - name: Copy updated configs
        run: |
          # Copy zsh configs
          if [ -f dotfiles-sync/zsh/.zshrc ]; then
            cp dotfiles-sync/zsh/.zshrc files/home/.zshrc
          fi
          
          if [ -f dotfiles-sync/zsh/.p10k.zsh ]; then
            cp dotfiles-sync/zsh/.p10k.zsh files/home/.p10k.zsh
          fi
          
          # Copy bash configs
          if [ -f dotfiles-sync/bash/.bashrc ]; then
            cp dotfiles-sync/bash/.bashrc files/home/.bashrc
          fi
          
          # Copy ghostty config
          if [ -f dotfiles-sync/ghostty/.config/ghostty/config ]; then
            mkdir -p files/home/.config/ghostty
            cp dotfiles-sync/ghostty/.config/ghostty/config files/home/.config/ghostty/config
          fi
          
          # Copy neovim configs
          if [ -d dotfiles-sync/nvim/.config/nvim ]; then
            mkdir -p files/home/.config/nvim
            cp -r dotfiles-sync/nvim/.config/nvim/* files/home/.config/nvim/
          fi
          
          # Copy git configs
          if [ -f dotfiles-sync/git/.gitconfig ]; then
            cp dotfiles-sync/git/.gitconfig files/home/.gitconfig
          fi
          
          # Copy tmux config
          if [ -f dotfiles-sync/tmux/.tmux.conf ]; then
            cp dotfiles-sync/tmux/.tmux.conf files/home/.tmux.conf
          fi
          
          # Copy vim config
          if [ -f dotfiles-sync/vim/.vimrc ]; then
            cp dotfiles-sync/vim/.vimrc files/home/.vimrc
          fi
          
      - name: Check for changes
        id: check_changes
        run: |
          # Check for both tracked modifications and untracked files across entire repository
          if [ -z "$(git status --porcelain)" ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected:"
            git status --porcelain
          fi
          
      - name: Commit and push if changed
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add files/home/
          git commit -m "chore: sync dotfiles from zoro11031/dotfiles

          Auto-synced by GitHub Actions
          Source: https://github.com/zoro11031/dotfiles"
          git push
          
      - name: Cleanup
        if: always()
        run: |
          rm -rf dotfiles-sync
